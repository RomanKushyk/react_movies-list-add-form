{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/contexts/MovieContext.tsx","components/MoviesList/MoviesList.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MovieContext","React","createContext","movies","moviesFromServer","setMovies","addMovie","MovieProvider","children","useState","contextValue","movie","current","Provider","value","MoviesList","useContext","map","imdbId","NewMovie","memo","setTitle","setDescription","setImgUrl","setImdbUrl","setImdbId","onSubmit","event","preventDefault","type","name","id","placeholder","onChange","target","App","onAdd","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d6b22829.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React, { FC, useState } from 'react';\nimport moviesFromServer from '../../api/movies.json';\nimport { Movie } from '../../types/Movie';\n\ninterface MovieContextInterface {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n  addMovie: (movie: Movie) => void;\n}\n\nexport const MovieContext = React.createContext<MovieContextInterface>({\n  movies: moviesFromServer,\n  setMovies: () => {},\n  addMovie: () => {},\n});\n\nexport const MovieProvider: FC = ({ children }) => {\n  const [movies, setMovies] = useState(moviesFromServer);\n\n  const addMovie = (movie: Movie) => {\n    setMovies((current) => ([\n      ...current,\n      movie,\n    ]));\n  };\n\n  const contextValue = {\n    movies,\n    setMovies,\n    addMovie,\n  };\n\n  return (\n    <MovieContext.Provider value={contextValue}>\n      {children}\n    </MovieContext.Provider>\n  );\n};\n","/* eslint-disable */\nimport React, { useContext } from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { MovieContext } from '../contexts/MovieContext';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = () => {\n  const { movies } = useContext(MovieContext);\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard key={movie.imdbId} {...movie} />\n      ))}\n    </div>\n  );\n};\n","import React, {\n  FormEvent,\n  memo,\n  useContext,\n  useState,\n} from 'react';\n\nimport './NewMovie.scss';\nimport { MovieContext } from '../contexts/MovieContext';\n\ninterface Props {\n  onAdd: (movie: Movie) => void,\n}\n\nexport const NewMovie: React.FC<Props> = memo(() => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [imgUrl, setImgUrl] = useState('');\n  const [imdbUrl, setImdbUrl] = useState('');\n  const [imdbId, setImdbId] = useState('');\n  const { addMovie } = useContext(MovieContext);\n\n  const createMovie = () => {\n    addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n  };\n\n  const resetFields = () => {\n    setTitle('');\n    setDescription('');\n    setImgUrl('');\n    setImdbUrl('');\n    setImdbId('');\n  };\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    createMovie();\n    resetFields();\n  };\n\n  return (\n    <form\n      className=\"form\"\n      onSubmit={handleSubmit}\n    >\n      <input\n        type=\"text\"\n        name=\"title\"\n        id=\"title\"\n        className=\"form__field\"\n        placeholder=\"Title\"\n        value={title}\n        onChange={(event) => (\n          setTitle(event.target.value)\n        )}\n      />\n\n      <textarea\n        name=\"description\"\n        id=\"description\"\n        className=\"form__field\"\n        placeholder=\"Description\"\n        value={description}\n        onChange={(event) => (\n          setDescription(event.target.value)\n        )}\n      />\n\n      <input\n        type=\"text\"\n        name=\"imgUrl\"\n        id=\"imgUrl\"\n        className=\"form__field\"\n        placeholder=\"Image Url\"\n        value={imgUrl}\n        onChange={(event => (\n          setImgUrl(event.target.value)\n        ))}\n      />\n      <input\n        type=\"text\"\n        name=\"imdbUrl\"\n        id=\"imdbUrl\"\n        className=\"form__field\"\n        placeholder=\"IMDB Url\"\n        value={imdbUrl}\n        onChange={(event => (\n          setImdbUrl(event.target.value)\n        ))}\n      />\n      <input\n        type=\"text\"\n        name=\"imdbId\"\n        id=\"imdbId\"\n        className=\"form__field\"\n        placeholder=\"IMDB Id\"\n        value={imdbId}\n        onChange={(event => (\n          setImdbId(event.target.value)\n        ))}\n      />\n\n      <button\n        type=\"submit\"\n        className=\"form__submit\"\n      >\n        Add\n      </button>\n    </form>\n  );\n});\n","import React, { memo, useContext } from 'react';\n\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport { MovieContext, MovieProvider } from './components/contexts/MovieContext';\n\nexport const App: React.FC = memo(() => {\n  const { movies, addMovie } = useContext(MovieContext);\n\n  return (\n    <MovieProvider>\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={addMovie} />\n        </div>\n      </div>\n    </MovieProvider>\n  );\n});\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}